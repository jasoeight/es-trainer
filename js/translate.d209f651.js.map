{"version":3,"sources":["webpack:///./src/views/Translate.vue?a5e8","webpack:///src/views/Translate.vue","webpack:///./src/views/Translate.vue?d7cd","webpack:///./src/views/Translate.vue","webpack:///./src/graphql/Translate.gql"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","alignCenter","justify-center","staticClass","large","block","color","on","click","updateLanguage","_v","_s","languageDirectionText","clearable","label","append-outer-icon","keyup","$event","_k","keyCode","key","doSearch","click:append-outer","model","value","callback","$$v","text","expression","search","length","query","__webpack_require__","variables","language","scopedSlots","_u","fn","ref","ref_result","result","loading","data","error","xs12","size","width","indeterminate","translations","_l","translation","index","id","hover","dark","grid-list-xs","row","wrap","xs6","domProps","innerHTML","getText","searchText","matchedText","_e","staticRenderFns","Translatevue_type_script_lang_js_","computed","methods","replace","concat","views_Translatevue_type_script_lang_js_","component","Object","componentNormalizer","options","__file","__webpack_exports__","doc","kind","definitions","operation","name","variableDefinitions","variable","type","defaultValue","directives","selectionSet","selections","alias","arguments","loc","start","end","source","body","locationOffset","line","column","collectFragmentReferences","node","refs","add","forEach","selection","def","definitionRefs","findOperation","i","element","oneQuery","operationName","newDoc","hasOwnProperty","opRefs","Set","allRefs","newRefs","prevRefs","refName","has","childRefs","childRef","op","push","module","exports"],"mappings":"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","file":"js/translate.d209f651.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('layout-main',{attrs:{\"alignCenter\":\"\",\"justify-center\":\"\"}},[_c('v-card',[_c('v-card-text',[_c('v-btn',{staticClass:\"my-3\",attrs:{\"large\":\"\",\"block\":\"\",\"color\":\"primary\"},on:{\"click\":_vm.updateLanguage}},[_vm._v(_vm._s(_vm.languageDirectionText))]),_c('v-text-field',{staticClass:\"my-3\",attrs:{\"clearable\":\"\",\"label\":\"Suchtext\",\"append-outer-icon\":\"search\"},on:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.doSearch($event)},\"click:append-outer\":_vm.doSearch},model:{value:(_vm.text),callback:function ($$v) {_vm.text=$$v},expression:\"text\"}}),(_vm.search.length > 0)?_c('apollo-query',{attrs:{\"query\":require('@/graphql/Translate.gql'),\"variables\":{ search: _vm.search, language: _vm.language }},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar ref_result = ref.result;\nvar loading = ref_result.loading;\nvar error = ref_result.error;\nvar data = ref_result.data;\nreturn [_c('v-flex',{attrs:{\"xs12\":\"\"}},[(loading)?_c('v-progress-circular',{attrs:{\"size\":70,\"width\":7,\"color\":\"purple\",\"indeterminate\":\"\"}}):(data && data.translations)?_vm._l((data.translations),function(translation,index){return _c('v-card',{key:translation.id,staticClass:\"my-3\",attrs:{\"color\":index%2 === 0 ? 'primary' : 'info',\"hover\":\"\",\"dark\":\"\"}},[_c('v-card-text',{staticClass:\"px-0 py-0\"},[_c('v-container',{staticClass:\"px-0 mx-3 my-0 py-2\",attrs:{\"grid-list-xs\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('h3',{domProps:{\"innerHTML\":_vm._s(_vm.getText(translation.searchText))}})]),_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('h3',{domProps:{\"innerHTML\":_vm._s(translation.matchedText)}})])],1)],1)],1)],1)}):_vm._e()],2)]}}])}):_vm._e()],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <layout-main alignCenter justify-center>\n        <v-card>\n            <v-card-text>\n                <v-btn\n                    large\n                    block\n                    color=\"primary\"\n                    class=\"my-3\"\n                    @click=\"updateLanguage\"\n                >{{ languageDirectionText }}</v-btn>\n                <v-text-field\n                    clearable\n                    v-model=\"text\"\n                    label=\"Suchtext\"\n                    append-outer-icon=\"search\"\n                    @keyup.enter=\"doSearch\"\n                    @click:append-outer=\"doSearch\"\n                    class=\"my-3\"\n                />\n                <apollo-query\n                    v-if=\"search.length > 0\"\n                    :query=\"require('@/graphql/Translate.gql')\"\n                    :variables=\"{ search, language }\"\n                >\n                    <template slot-scope=\"{ result: { loading, error, data } }\">\n                        <v-flex xs12>\n                            <v-progress-circular\n                                v-if=\"loading\"\n                                :size=\"70\"\n                                :width=\"7\"\n                                color=\"purple\"\n                                indeterminate\n                            />\n                            <v-card\n                                v-else-if=\"data && data.translations\"\n                                v-for=\"(translation, index) in data.translations\"\n                                :key=\"translation.id\"\n                                :color=\"index%2 === 0 ? 'primary' : 'info'\"\n                                class=\"my-3\"\n                                hover\n                                dark\n                            >\n                                <v-card-text class=\"px-0 py-0\">\n                                    <v-container grid-list-xs class=\"px-0 mx-3 my-0 py-2\">\n                                        <v-layout\n                                            row\n                                            wrap\n                                        >\n                                            <v-flex xs6>\n                                                <h3 v-html=\"getText(translation.searchText)\" />\n                                            </v-flex>\n                                            <v-flex xs6>\n                                                <h3 v-html=\"translation.matchedText\" />\n                                            </v-flex>\n                                        </v-layout>\n                                    </v-container>\n                                </v-card-text>\n                            </v-card>\n                        </v-flex>\n                    </template>\n                </apollo-query>\n            </v-card-text>\n        </v-card>\n    </layout-main>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            language: 'de',\n            text: '',\n            search: ''\n        };\n    },\n    computed: {\n        languageDirectionText() {\n            if (this.language === 'de') {\n                return 'DE -> ES';\n            }\n\n            return 'ES -> DE';\n        }\n    },\n    methods: {\n        updateLanguage() {\n            this.language = this.language === 'de' ? 'es' : 'de';\n        },\n        doSearch() {\n            this.search = this.text || '';\n        },\n        getText(searchText) {\n            return searchText.replace(this.text, `<strong style=\"text-decoration: underline;\">${this.text}</strong>`);\n        }\n    }\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Translate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Translate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Translate.vue?vue&type=template&id=d571d65e&\"\nimport script from \"./Translate.vue?vue&type=script&lang=js&\"\nexport * from \"./Translate.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Translate.vue\"\nexport default component.exports","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"Translate\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"search\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"language\"}},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"defaultValue\":{\"kind\":\"StringValue\",\"value\":\"de\",\"block\":false}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"translations\"},\"name\":{\"kind\":\"Name\",\"value\":\"translate\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"search\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"search\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"language\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"language\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"searchText\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"matchedText\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":181}};\n    doc.loc.source = {\"body\":\"query Translate ($search: String!, $language: String = \\\"de\\\") {\\n    translations: translate(search: $search, language: $language) {\\n      id\\n      searchText\\n      matchedText\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \r\n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \r\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"Translate\"] = oneQuery(doc, \"Translate\");\n        \r\n"],"sourceRoot":""}