{"version":3,"sources":["webpack:///./src/graphql/deleteItem.gql","webpack:///./src/views/List.vue?217b","webpack:///./src/components/list/Form.vue?1d06","webpack:///src/components/list/Form.vue","webpack:///./src/components/list/Form.vue?2b68","webpack:///./src/components/list/Form.vue","webpack:///./src/components/list/Search.vue?ecc1","webpack:///src/components/list/Search.vue","webpack:///./src/components/list/Search.vue?2850","webpack:///./src/components/list/Search.vue","webpack:///src/views/List.vue","webpack:///./src/views/List.vue?b750","webpack:///./src/views/List.vue","webpack:///./src/graphql/Lessons.gql","webpack:///./src/graphql/Items.gql","webpack:///./src/graphql/saveItem.gql"],"names":["doc","kind","definitions","operation","name","value","variableDefinitions","variable","type","directives","selectionSet","selections","arguments","loc","start","end","source","body","locationOffset","line","column","collectFragmentReferences","node","refs","add","forEach","selection","def","definitionRefs","findOperation","i","length","element","oneQuery","operationName","newDoc","hasOwnProperty","opRefs","Set","allRefs","newRefs","size","prevRefs","refName","has","childRefs","childRef","op","push","module","exports","render","_vm","this","_h","$createElement","_c","_self","attrs","alignCenter","justify-center","query","__webpack_require__","variables","filter","pagination","search","scopedSlots","_u","key","fn","ref","ref_result","result","loading","data","error","on","onSearch","flat","color","staticClass","dark","click","newItem","_v","show","showDialog","item","editedItem","update:show","$event","saved","onSave","headers","items","list","rows","total-items","count","update:pagination","props","_s","id","lesson","de","es","small","editItem","tag","mutation","done","reloadTable","mutate","doDelete","slot","indeterminate","staticRenderFns","Formvue_type_template_id_074d4256_render","max-width","model","onDone","formTitle","message","_e","lazy-validation","callback","$$v","valid","expression","item-value","item-text","lessons","label","return-object","required","rules","requiredRules","$set","types","large","close","save","Formvue_type_template_id_074d4256_staticRenderFns","Formvue_type_script_lang_js_","Boolean","default","Object","closeOnDone","text","created","v","computed","methods","reset","$emit","$refs","form","undefined","validate","watch","newValue","list_Formvue_type_script_lang_js_","component","componentNormalizer","options","__file","Form","Searchvue_type_template_id_38b32c9e_render","row","no-wrap","xs12","sm6","md3","Searchvue_type_template_id_38b32c9e_staticRenderFns","Searchvue_type_script_lang_js_","_this","keys","list_Searchvue_type_script_lang_js_","Search_component","Search","Listvue_type_script_lang_js_","components","ListForm","ListSearch","rowsPerPage","sortable","assign","page","$vuetifyConfirmDialog","open","then","state","catch","refetch","views_Listvue_type_script_lang_js_","List_component","__webpack_exports__","alias"],"mappings":"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","file":"js/new.b83644cc.js","sourcesContent":["\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteItem\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteItem\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":76}};\n    doc.loc.source = {\"body\":\"mutation deleteItem($id: Int!) {\\n    deleteItem(id: $id) {\\n      id\\n    }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \r\n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \r\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"deleteItem\"] = oneQuery(doc, \"deleteItem\");\n        \r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('layout-main',{attrs:{\"alignCenter\":\"\",\"justify-center\":\"\"}},[_c('apollo-query',{attrs:{\"query\":require('@/graphql/Items.gql'),\"variables\":{\n            filter: {\n                pagination: _vm.pagination,\n                search: _vm.search\n            }\n        }},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n        var query = ref.query;\n        var ref_result = ref.result;\n        var loading = ref_result.loading;\n        var error = ref_result.error;\n        var data = ref_result.data;\nreturn [_c('list-search',{on:{\"search\":_vm.onSearch}}),_c('v-toolbar',{attrs:{\"flat\":\"\",\"color\":\"white\"}},[_c('v-spacer'),_c('v-btn',{staticClass:\"mb-2\",attrs:{\"color\":\"primary\",\"dark\":\"\"},on:{\"click\":_vm.newItem}},[_vm._v(\"Neuer Eintrag\")]),_c('list-form',{attrs:{\"show\":_vm.showDialog,\"item\":_vm.editedItem},on:{\"update:show\":function($event){_vm.showDialog=$event},\"saved\":function($event){_vm.onSave(query)}}})],1),_c('v-data-table',{staticClass:\"elevation-1\",attrs:{\"headers\":_vm.headers,\"items\":data ? data.list.rows : [],\"loading\":loading,\"pagination\":_vm.pagination,\"total-items\":data ? data.list.count : 0},on:{\"update:pagination\":function($event){_vm.pagination=$event}},scopedSlots:_vm._u([{key:\"items\",fn:function(props){return [_c('td',[_vm._v(_vm._s(props.item.id))]),_c('td',[_vm._v(_vm._s(props.item.lesson))]),_c('td',[_vm._v(_vm._s(props.item.type))]),_c('td',[_vm._v(_vm._s(props.item.de))]),_c('td',[_vm._v(_vm._s(props.item.es))]),_c('td',[_c('v-icon',{staticClass:\"mr-2\",attrs:{\"small\":\"\"},on:{\"click\":function($event){_vm.editItem(props.item)}}},[_vm._v(\"edit\")]),_c('apollo-mutation',{attrs:{\"tag\":\"\",\"mutation\":require('@/graphql/deleteItem.gql'),\"variables\":{\n                                id: props.item.id\n                            }},on:{\"done\":function($event){_vm.reloadTable(query)}},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n                            var mutate = ref.mutate;\n                            var loading = ref.loading;\n                            var error = ref.error;\nreturn [_c('v-icon',{attrs:{\"small\":\"\"},on:{\"click\":function($event){_vm.doDelete(mutate)}}},[_vm._v(\"delete\")])]}}])})],1)]}}])},[_c('v-progress-linear',{attrs:{\"slot\":\"progress\",\"color\":\"blue\",\"indeterminate\":\"\"},slot:\"progress\"})],1)]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-dialog',{attrs:{\"value\":_vm.show,\"max-width\":\"600px\"}},[_c('apollo-mutation',{attrs:{\"mutation\":require('@/graphql/saveItem.gql'),\"variables\":{\n            item: {\n                id: _vm.model.id,\n                lesson: _vm.model.lesson,\n                type: _vm.model.type,\n                de: _vm.model.de,\n                es: _vm.model.es\n            }\n        }},on:{\"done\":_vm.onDone},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n        var mutate = ref.mutate;\n        var loading = ref.loading;\n        var error = ref.error;\nreturn _c('v-card',{},[_c('v-card-title',[_c('span',{staticClass:\"headline\"},[_vm._v(_vm._s(_vm.formTitle))])]),_c('v-card-text',[(error)?_c('v-alert',{attrs:{\"value\":true,\"color\":\"error\"}},[_vm._v(\"\\n                    Es ist ein Fehler aufgetreten:\"),_c('br'),_vm._v(\"\\n                    \"+_vm._s(error.message)+\"\\n                \")]):_vm._e(),_c('v-form',{ref:\"form\",attrs:{\"lazy-validation\":\"\"},model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:\"valid\"}},[_c('apollo-query',{attrs:{\"query\":require('@/graphql/Lessons.gql')},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n        var data = ref.result.data;\nreturn [_c('v-combobox',{attrs:{\"item-value\":\"name\",\"item-text\":\"name\",\"items\":data ? data.lessons : [],\"label\":\"Lektion\",\"return-object\":false,\"required\":\"\",\"rules\":[_vm.requiredRules]},model:{value:(_vm.model.lesson),callback:function ($$v) {_vm.$set(_vm.model, \"lesson\", $$v)},expression:\"model.lesson\"}})]}}])}),_c('v-select',{attrs:{\"items\":_vm.types,\"label\":\"Typ\",\"rules\":[_vm.requiredRules],\"required\":\"\"},model:{value:(_vm.model.type),callback:function ($$v) {_vm.$set(_vm.model, \"type\", $$v)},expression:\"model.type\"}}),_c('v-textarea',{attrs:{\"label\":\"Deutsch\",\"rules\":[_vm.requiredRules],\"required\":\"\"},model:{value:(_vm.model.de),callback:function ($$v) {_vm.$set(_vm.model, \"de\", $$v)},expression:\"model.de\"}}),_c('v-textarea',{attrs:{\"label\":\"Spanisch\",\"rules\":[_vm.requiredRules],\"required\":\"\"},model:{value:(_vm.model.es),callback:function ($$v) {_vm.$set(_vm.model, \"es\", $$v)},expression:\"model.es\"}})],1)],1),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"secondary\",\"large\":\"\"},on:{\"click\":_vm.close}},[_vm._v(\"Schließen\")]),_c('v-btn',{attrs:{\"color\":\"primary\",\"large\":\"\"},on:{\"click\":function($event){_vm.save(mutate, true)}}},[_vm._v(\"Speichern\")]),_c('v-btn',{attrs:{\"color\":\"info\",\"large\":\"\"},on:{\"click\":function($event){_vm.save(mutate, false)}}},[_vm._v(\"Speichern und Nächster\")])],1)],1)}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-dialog :value=\"show\" max-width=\"600px\">\r\n        <apollo-mutation\r\n            :mutation=\"require('@/graphql/saveItem.gql')\"\r\n            :variables=\"{\r\n                item: {\r\n                    id: model.id,\r\n                    lesson: model.lesson,\r\n                    type: model.type,\r\n                    de: model.de,\r\n                    es: model.es\r\n                }\r\n            }\"\r\n            @done=\"onDone\"\r\n        >\r\n            <v-card slot-scope=\"{ mutate, loading, error }\">\r\n                <v-card-title>\r\n                    <span class=\"headline\">{{ formTitle }}</span>\r\n                </v-card-title>\r\n\r\n                <v-card-text>\r\n                    <v-alert\r\n                        v-if=\"error\"\r\n                        :value=\"true\"\r\n                        color=\"error\"\r\n                    >\r\n                        Es ist ein Fehler aufgetreten:<br>\r\n                        {{ error.message }}\r\n                    </v-alert>\r\n                    <v-form  ref=\"form\" v-model=\"valid\" lazy-validation>\r\n                        <apollo-query :query=\"require('@/graphql/Lessons.gql')\">\r\n                            <template slot-scope=\"{ result: { data } }\">\r\n                                <v-combobox\r\n                                    v-model=\"model.lesson\"\r\n                                    item-value=\"name\"\r\n                                    item-text=\"name\"\r\n                                    :items=\"data ? data.lessons : []\"\r\n                                    label=\"Lektion\"\r\n                                    :return-object=\"false\"\r\n                                    required\r\n                                    :rules=\"[requiredRules]\"\r\n                                />\r\n                            </template>\r\n                        </apollo-query>\r\n                        <v-select\r\n                            v-model=\"model.type\"\r\n                            :items=\"types\"\r\n                            label=\"Typ\"\r\n                            :rules=\"[requiredRules]\"\r\n                            required\r\n                        />\r\n                        <v-textarea\r\n                            v-model=\"model.de\"\r\n                            label=\"Deutsch\"\r\n                            :rules=\"[requiredRules]\"\r\n                            required\r\n                        />\r\n                        <v-textarea\r\n                            v-model=\"model.es\"\r\n                            label=\"Spanisch\"\r\n                            :rules=\"[requiredRules]\"\r\n                            required\r\n                        />\r\n                    </v-form>\r\n                </v-card-text>\r\n\r\n                <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn\r\n                        color=\"secondary\"\r\n                        large\r\n                        @click=\"close\"\r\n                    >Schließen</v-btn>\r\n                    <v-btn\r\n                        color=\"primary\"\r\n                        large\r\n                        @click=\"save(mutate, true)\"\r\n                    >Speichern</v-btn>\r\n                    <v-btn\r\n                        color=\"info\"\r\n                        large\r\n                        @click=\"save(mutate, false)\"\r\n                    >Speichern und Nächster</v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </apollo-mutation>\r\n    </v-dialog>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        show: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        item: {\r\n            type: Object\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            closeOnDone: true,\r\n            valid: true,\r\n            model: {\r\n                id: null,\r\n                lesson: '',\r\n                type: 'word',\r\n                de: '',\r\n                es: ''\r\n            },\r\n            types: [\r\n                { text: 'Vokabel', value: 'word' },\r\n                { text: 'Text', value: 'text' }\r\n            ],\r\n            created: false,\r\n            requiredRules: v => !!v || 'Pflichtfeld',\r\n        };\r\n    },\r\n    computed: {\r\n        formTitle() {\r\n            if (this.item === null) {\r\n                return 'Neuer Eintrag';\r\n            }\r\n\r\n            return 'Eintrag bearbeiten';\r\n        }\r\n    },\r\n    methods: {\r\n        close () {\r\n            this.reset();\r\n            this.$emit('update:show', false);\r\n        },\r\n        reset() {\r\n            this.model.id = null;\r\n            this.model.lesson = '';\r\n            this.model.type = 'word';\r\n            this.model.de = '';\r\n            this.model.es = '';\r\n            this.$refs.form.reset();\r\n        },\r\n        save(mutate, closeOnDone = true) {\r\n            this.closeOnDone = closeOnDone;\r\n            if (this.$refs.form.validate()) {\r\n                mutate();\r\n            }\r\n        },\r\n        onDone() {\r\n            this.$emit('saved');\r\n            if (this.closeOnDone) {\r\n                this.close();\r\n            } else {\r\n                this.reset();\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        item(newValue) {\r\n            if (newValue !== null) {\r\n                this.model.id = newValue.id;\r\n                this.model.lesson = newValue.lesson;\r\n                this.model.type = newValue.type;\r\n                this.model.de = newValue.de;\r\n                this.model.es = newValue.es;\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=074d4256&\"\nimport script from \"./Form.vue?vue&type=script&lang=js&\"\nexport * from \"./Form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Form.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-form',[_c('v-container',[_c('v-layout',{attrs:{\"row\":\"\",\"no-wrap\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"md3\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Id\"},model:{value:(_vm.model.id),callback:function ($$v) {_vm.$set(_vm.model, \"id\", $$v)},expression:\"model.id\"}})],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"md3\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Lektion\"},model:{value:(_vm.model.lesson),callback:function ($$v) {_vm.$set(_vm.model, \"lesson\", $$v)},expression:\"model.lesson\"}})],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"md3\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Typ\"},model:{value:(_vm.model.type),callback:function ($$v) {_vm.$set(_vm.model, \"type\", $$v)},expression:\"model.type\"}})],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"md3\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Deutsch\"},model:{value:(_vm.model.de),callback:function ($$v) {_vm.$set(_vm.model, \"de\", $$v)},expression:\"model.de\"}})],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"md3\":\"\"}},[_c('v-text-field',{attrs:{\"label\":\"Spanisch\"},model:{value:(_vm.model.es),callback:function ($$v) {_vm.$set(_vm.model, \"es\", $$v)},expression:\"model.es\"}})],1),_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\",\"md3\":\"\"}},[_c('v-btn',{attrs:{\"color\":\"blue darken-1\",\"flat\":\"\"},on:{\"click\":_vm.reset}},[_vm._v(\"Reset\")]),_c('v-btn',{attrs:{\"color\":\"blue darken-1\",\"flat\":\"\"},on:{\"click\":_vm.search}},[_vm._v(\"Suchen\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-form>\r\n        <v-container>\r\n            <v-layout row no-wrap>\r\n                <v-flex xs12 sm6 md3>\r\n                    <v-text-field\r\n                        label=\"Id\"\r\n                        v-model=\"model.id\"\r\n                    />\r\n                </v-flex>\r\n                <v-flex xs12 sm6 md3>\r\n                    <v-text-field\r\n                        label=\"Lektion\"\r\n                        v-model=\"model.lesson\"\r\n                    />\r\n                </v-flex>\r\n                <v-flex xs12 sm6 md3>\r\n                    <v-text-field\r\n                        label=\"Typ\"\r\n                        v-model=\"model.type\"\r\n                    />\r\n                </v-flex>\r\n                <v-flex xs12 sm6 md3>\r\n                    <v-text-field\r\n                        label=\"Deutsch\"\r\n                        v-model=\"model.de\"\r\n                    />\r\n                </v-flex>\r\n                <v-flex xs12 sm6 md3>\r\n                    <v-text-field\r\n                        label=\"Spanisch\"\r\n                        v-model=\"model.es\"\r\n                    />\r\n                </v-flex>\r\n                <v-flex xs12 sm6 md3>\r\n                    <v-btn\r\n                        color=\"blue darken-1\"\r\n                        flat\r\n                        @click=\"reset\"\r\n                    >Reset</v-btn>\r\n                    <v-btn\r\n                        color=\"blue darken-1\"\r\n                        flat\r\n                        @click=\"search\"\r\n                    >Suchen</v-btn>\r\n                </v-flex>\r\n            </v-layout>\r\n        </v-container>\r\n    </v-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            model: {\r\n                id: '',\r\n                type: '',\r\n                lesson: '',\r\n                de: '',\r\n                es: ''\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        reset() {\r\n            this.model.id = '';\r\n            this.model.type = '';\r\n            this.model.lesson = '';\r\n            this.model.de = '';\r\n            this.model.es = '';\r\n            this.$emit('search', {});\r\n        },\r\n        search() {\r\n            const search = {};\r\n\r\n            Object.keys(this.model).forEach(key => {\r\n                if (this.model[key] === '') {\r\n                    return;\r\n                }\r\n                search[key] = this.model[key];\r\n            });\r\n\r\n            this.$emit('search', search);\r\n        }\r\n    }\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Search.vue?vue&type=template&id=38b32c9e&\"\nimport script from \"./Search.vue?vue&type=script&lang=js&\"\nexport * from \"./Search.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Search.vue\"\nexport default component.exports","<template>\n    <layout-main alignCenter justify-center>\n        <apollo-query\n            :query=\"require('@/graphql/Items.gql')\"\n            :variables=\"{\n                filter: {\n                    pagination,\n                    search\n                }\n            }\"\n        >\n            <template slot-scope=\"{ query, result: { loading, error, data } }\">\n                <list-search @search=\"onSearch\" />\n                <v-toolbar flat color=\"white\">\n                    <v-spacer />\n                    <v-btn\n                        color=\"primary\"\n                        dark\n                        class=\"mb-2\"\n                        @click=\"newItem\"\n                    >Neuer Eintrag</v-btn>\n                    <list-form\n                        :show.sync=\"showDialog\"\n                        :item=\"editedItem\"\n                        @saved=\"onSave(query)\"\n                    />\n                </v-toolbar>\n                <v-data-table\n                    :headers=\"headers\"\n                    :items=\"data ? data.list.rows : []\"\n                    :loading=\"loading\"\n                    class=\"elevation-1\"\n                    :pagination.sync=\"pagination\"\n                    :total-items=\"data ? data.list.count : 0\"\n                >\n                    <v-progress-linear\n                        slot=\"progress\"\n                        color=\"blue\"\n                        indeterminate\n                    />\n                    <template slot=\"items\" slot-scope=\"props\">\n                        <td>{{ props.item.id }}</td>\n                        <td>{{ props.item.lesson }}</td>\n                        <td>{{ props.item.type }}</td>\n                        <td>{{ props.item.de }}</td>\n                        <td>{{ props.item.es }}</td>\n                        <td>\n                            <v-icon\n                                small\n                                class=\"mr-2\"\n                                @click=\"editItem(props.item)\"\n                            >edit</v-icon>\n                            <apollo-mutation\n                                tag=\"\"\n                                :mutation=\"require('@/graphql/deleteItem.gql')\"\n                                :variables=\"{\n                                    id: props.item.id\n                                }\"\n                                @done=\"reloadTable(query)\"\n                            >\n                                <template slot-scope=\"{ mutate, loading, error }\">\n                                    <v-icon\n                                        small\n                                        @click=\"doDelete(mutate)\"\n                                    >delete</v-icon>\n                                </template>\n                            </apollo-mutation>\n                        </td>\n                    </template>\n                </v-data-table>\n            </template>\n        </apollo-query>\n    </layout-main>\n</template>\n\n<script>\nimport ListForm from '@/components/list/Form.vue';\nimport ListSearch from '@/components/list/Search.vue';\nexport default {\n    components: {\n        ListForm,\n        ListSearch\n    },\n    data() {\n        return {\n            pagination: {\n                rowsPerPage: 25\n            },\n            search: {},\n            headers: [\n                { text: 'Id', value: 'id' },\n                { text: 'Lektion', value: 'lesson' },\n                { text: 'Typ', value: 'type' },\n                { text: 'Deutsch', value: 'de' },\n                { text: 'Spanisch', value: 'es' },\n                { text: 'Aktionen', value: 'id', sortable: false }\n            ],\n            showDialog: false,\n            editedItem: null\n        };\n    },\n    methods: {\n        newItem() {\n            this.editedItem = null;\n            this.showDialog = true;\n        },\n        editItem (item) {\n            this.editedItem = Object.assign({}, item);\n            this.showDialog = true;\n        },\n        onSave(query) {\n            this.reloadTable(query);\n            this.editedItem = null;\n        },\n        onSearch(search) {\n            this.pagination.page = 1;\n            this.search = search;\n        },\n        doDelete(mutate) {\n            this.$vuetifyConfirmDialog.open(\n                'Eintrag löschen',\n                'Wollen Sie den Eintrag wirklich löschen?',\n                'Abbrechen',\n                'Löschen'\n            ).then(state => {\n                if (state) {\n                    mutate();\n                }\n            })\n                .catch(() => {});\n        },\n        reloadTable(query) {\n            query.refetch();\n        }\n    }\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./List.vue?vue&type=template&id=1bc25a56&\"\nimport script from \"./List.vue?vue&type=script&lang=js&\"\nexport * from \"./List.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"List.vue\"\nexport default component.exports","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"Lessons\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"lessons\"},\"name\":{\"kind\":\"Name\",\"value\":\"getLessons\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":63}};\n    doc.loc.source = {\"body\":\"query Lessons {\\n    lessons: getLessons {\\n        name\\n    }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \r\n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \r\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"Lessons\"] = oneQuery(doc, \"Lessons\");\n        \r\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"Items\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filter\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ListInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"alias\":{\"kind\":\"Name\",\"value\":\"list\"},\"name\":{\"kind\":\"Name\",\"value\":\"list\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"filter\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"filter\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"rows\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lesson\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"de\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"es\"},\"arguments\":[],\"directives\":[]}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"count\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":170}};\n    doc.loc.source = {\"body\":\"query Items ($filter: ListInput!) {\\n    list: list(filter: $filter) {\\n      rows {\\n        id\\n        lesson\\n        type\\n        de\\n        es\\n      }\\n      count\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \r\n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \r\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"Items\"] = oneQuery(doc, \"Items\");\n        \r\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"saveItem\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"item\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ItemInput\"}}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"saveItem\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"item\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"item\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":84}};\n    doc.loc.source = {\"body\":\"mutation saveItem($item: ItemInput!) {\\n    saveItem(item: $item) {\\n      id\\n    }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \r\n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \r\n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set(opRefs);\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"saveItem\"] = oneQuery(doc, \"saveItem\");\n        \r\n"],"sourceRoot":""}