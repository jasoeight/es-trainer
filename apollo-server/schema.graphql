# Included scalars
scalar JSON
scalar Upload

# Included directives
directive @private on FIELD_DEFINITION

enum Types {
  text
  word
  number
}

input ItemsFilter {
  limit: Int
  offset: Int
  id: Int
  lessons: [String]
  type: String
  de: String
  es: String
}

input ItemInput {
  id: Int
  lesson: String!
  type: Types!
  de: String!
  es: String!
  info: String
}

input Pagination {
  sortBy: String
  descending: Boolean
  page: Int
  rowsPerPage: Int
  totalItems: Int
}

input ListInput {
  pagination: Pagination
  search: ItemsFilter
}

type Item {
  id: Int
  lesson: String!
  type: Types!
  de: String!
  es: String!
  info: String
}

type Lesson {
  name: String
}

type Id {
  id: Int
}

type Translation {
  id: Int
  searchText: String
  matchedText: String
}

type ItemsList {
  count: Int
  rows: [Item]
}

type LoggedInUser {
  id: Int
  username: String
  token: String
  refreshToken: String
}

type Query {
  list(filter: ListInput = { paging: {}, search: {} }): ItemsList
  randomItems(filter: ItemsFilter!): [Item],
  translate(search: String!, language: String = "de"): [Translation],
  getLessons: [Lesson]
}

type Mutation {
  saveItem(item: ItemInput!): Item! @private,
  deleteItem(id: Int!): Id @private,
  login(username: String!, password: String!): LoggedInUser
}